services:
  nginx:
    image: nginx:1.27.5
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - oetp-app1
      - oetp-app2
    networks:
      - oetp-network

  oetp-app1:
    build:
      context: .
      dockerfile: Dockerfile
    image: oetp:2.0-alpha
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://citus-coordinator:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_CACHE_TYPE=redis
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_TIMEOUT=2000
      - SPRING_REDIS_CONNECTION_MAX_ATTEMPTS=5
      - SPRING_CACHE_REDIS_TIME_TO_LIVE=600000
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - RESILIENCE4J_RATELIMITER_INSTANCES_BOOKING_LIMIT_FOR_PERIOD=100
      - RESILIENCE4J_RATELIMITER_INSTANCES_BOOKING_LIMIT_REFRESH_PERIOD=1s
    depends_on:
      citus-coordinator:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - oetp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  oetp-app2:
    build:
      context: .
      dockerfile: Dockerfile
    image: oetp:2.0-alpha
    ports:
      - "8082:8082"
    environment:
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://citus-coordinator:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_CACHE_TYPE=redis
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_TIMEOUT=2000
      - SPRING_REDIS_CONNECTION_MAX_ATTEMPTS=5
      - SPRING_CACHE_REDIS_TIME_TO_LIVE=600000
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - RESILIENCE4J_RATELIMITER_INSTANCES_BOOKING_LIMIT_FOR_PERIOD=100
      - RESILIENCE4J_RATELIMITER_INSTANCES_BOOKING_LIMIT_REFRESH_PERIOD=1s
    depends_on:
      citus-coordinator:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - oetp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  citus-coordinator:
    image: citusdata/citus:12.1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=password
    volumes:
      - citus-coordinator-data:/var/lib/postgresql/data
      - ./docker/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./docker/init-citus.sh:/docker-entrypoint-initdb.d/init-citus.sh
    command: ["postgres", "-c", "max_prepared_transactions=200"]
    networks:
      - oetp-network

  citus-worker1:
    image: citusdata/citus:12.1
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=password
    volumes:
      - citus-worker1-data:/var/lib/postgresql/data
      - ./docker/pg_hba.conf:/etc/postgresql/pg_hba.conf
    depends_on:
      - citus-coordinator
    command: ["postgres", "-c", "max_prepared_transactions=200"]
    networks:
      - oetp-network

  citus-worker2:
    image: citusdata/citus:12.1
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=password
    volumes:
      - citus-worker2-data:/var/lib/postgresql/data
      - ./docker/pg_hba.conf:/etc/postgresql/pg_hba.conf
    depends_on:
      - citus-coordinator
    command: ["postgres", "-c", "max_prepared_transactions=200"]
    networks:
      - oetp-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - oetp-network

volumes:
  citus-coordinator-data:
  citus-worker1-data:
  citus-worker2-data:

networks:
  oetp-network:
    driver: bridge